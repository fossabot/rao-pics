name: Test Coverage
on:
  push:
    branches:
      - turbo-electron-prisma
    tags:
      - "v*"
jobs:
  build:
    if: contains(github.event.head_commit.message, 'test') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install --no-frozen-lockfile

      # Only run the coverage once
      - if: ${{ matrix.node-version == '18.x' }}
        name: Get Coverage for badge
        run: |
          SUMMARY="$(pnpm test | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          process.env.COVERAGE = TOKENS[2];
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

          # var REF = 'refs/pull/27/merge.json';
          REF=${{ github.ref }}
          # console.log('github.ref: ' + REF);
          echo "github.ref: $REF"
          # var PATHS = REF.split('/');
          IFS='/' read -ra PATHS <<< "$REF"
          # var BRANCH_NAME = PATHS[1] + PATHS[2];
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          # console.log(BRANCH_NAME); // 'pull_27'
          echo $BRANCH_NAME
          # process.env.BRANCH = 'pull_27';
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
        env:
          NODE_ENV: development
      - if: ${{ matrix.node-version == '18.x' }}
        name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 5c4881f21bab2cf4f09a8658354fb997
          filename: rao-pics_core__coverage.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: vitest
        env:
          COVERAGE: ${{ env.COVERAGE }}
